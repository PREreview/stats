name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-image:
    name: 'Build image'
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    outputs:
      image: ${{ steps.build.outputs.imageid }}

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4.1.6

      - name: 'Set up Docker Build'
        uses: docker/setup-buildx-action@v3.3.0

      - name: 'Build image'
        id: build
        uses: docker/build-push-action@v5.3.0
        with:
          outputs: type=docker,dest=/tmp/image.tar
          cache-from: type=gha,ignore-error=true
          cache-to: type=gha,mode=max,ignore-error=true
          target: prod

      - name: 'Upload build'
        uses: actions/upload-artifact@v4.3.3
        with:
          name: image
          path: /tmp/image.tar

  format:
    name: 'Format'
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4.1.6

      - name: 'Set up Node.js'
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: package.json
          cache: ${{ !env.ACT && 'npm' || '' }}

      - name: 'Install dependencies'
        run: npm ci

      - name: 'Run formatter'
        run: npx prettier --ignore-unknown --check '**'

  push:
    name: 'Push image'
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    if: github.ref == 'refs/heads/main'
    outputs:
      image: ${{ steps.image.outputs.image }}
    needs:
      - build-image
      - format

    steps:
      - name: 'Set up flyctl'
        uses: superfly/flyctl-actions/setup-flyctl@1.5

      - name: 'Log in to the registry'
        run: flyctl auth docker
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 'Download image'
        uses: actions/download-artifact@v4.1.7
        with:
          name: image
          path: /tmp

      - name: 'Load image'
        run: docker load --input /tmp/image.tar

      - name: 'Generate image name'
        id: image
        run: echo "image=registry.fly.io/prereview-stats:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: 'Tag image'
        run: docker tag ${{ needs.build-image.outputs.image }} ${{ steps.image.outputs.image }}

      - name: 'Push image'
        run: docker push ${{ steps.image.outputs.image }}

  deploy:
    name: 'Deploy'
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    if: github.ref == 'refs/heads/main'
    needs:
      - push

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4.1.6
        with:
          sparse-checkout: fly.toml
          sparse-checkout-cone-mode: false

      - name: 'Set up flyctl'
        uses: superfly/flyctl-actions/setup-flyctl@1.5

      - name: 'Deploy app'
        run: flyctl deploy --image ${{ needs.push.outputs.image }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
